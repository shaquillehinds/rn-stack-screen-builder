import { DebugLogger } from "../../utils/Logger.js";
import injectToProgram from "../../utils/injectToProgram.inject.js";
const log = DebugLogger("import.inject.stage.ts");
export default function injectImportStage(jcs, workingSource, { importName, source, isDefault, col }) {
    if (!col) {
        log("error", "No expression collection passed to this stage.");
        return workingSource;
    }
    const newImport = jcs.importDeclaration([
        isDefault
            ? jcs.importDefaultSpecifier(jcs.identifier(importName))
            : jcs.importSpecifier(jcs.identifier(importName))
    ], jcs.stringLiteral(source));
    let size = col.size();
    if (size)
        col.insertBefore((e, i) => i === size - 1 ? newImport : undefined);
    else
        injectToProgram(workingSource, [
            { statement: newImport, injectionLine: "first" }
        ]);
    return workingSource;
}
