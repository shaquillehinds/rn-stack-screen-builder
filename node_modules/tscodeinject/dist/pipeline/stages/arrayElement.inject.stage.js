import objToExp from "../parsers/objToExp.parser.js";
import arrToExp from "../parsers/arrToExp.parser.js";
import funcToExp from "../parsers/funcToExp.parser.js";
import { DebugLogger } from "../../utils/Logger.js";
const log = DebugLogger("arrayElement.inject.stage.ts");
export default function injectArrayElementStage(jcs, workingSource, { value, identifier, col }) {
    if (!col) {
        log("error", "No expression collection passed to this stage.");
        return workingSource;
    }
    let newElement;
    switch (typeof value) {
        case "object":
            if (value instanceof Array)
                newElement = arrToExp(jcs, value);
            else
                newElement = objToExp(jcs, value);
            break;
        case "function":
            newElement = funcToExp(jcs, value);
            break;
        default:
            if (identifier)
                newElement = jcs.identifier(value);
            else
                newElement = jcs.literal(value);
    }
    col.forEach(path => path.value.elements.push(newElement));
    return workingSource;
}
