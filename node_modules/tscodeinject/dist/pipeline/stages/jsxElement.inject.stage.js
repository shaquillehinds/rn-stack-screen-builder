import { DebugLogger } from "../../utils/Logger.js";
const log = DebugLogger("jsxElement.inject.stage.ts");
/**
 *
 * @param options.jsxElementTemplate - Provide jsx element signatures in a template string
 * @example
 * ```
 * (`{
 *  template: true
 * }`)
 * ```
 */
export default function injectJSXElementStage(jcs, workingSource, { stringTemplate, col }) {
    var _a;
    if (!col) {
        log("error", "No expression collection passed to this stage.");
        return workingSource;
    }
    const ast = jcs.withParser("tsx")(stringTemplate);
    const childElement = ast.find(jcs.JSXElement).get().value;
    const parentElement = col.get().value;
    (_a = parentElement.children) === null || _a === void 0 ? void 0 : _a.push(childElement);
    col.forEach(p => p.replace(parentElement));
    return workingSource;
}
