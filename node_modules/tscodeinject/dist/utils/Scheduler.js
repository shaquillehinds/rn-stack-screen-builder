import { EventEmitter } from "events";
export class Schedule extends EventEmitter {
    constructor(action, time) {
        super();
        this.handle = undefined;
        this.action = action;
        this.time = time;
        this.on("interval", () => action(this));
    }
    start() {
        if (!this.handle) {
            this.handle = setInterval(() => {
                this.emit("interval");
            }, this.time);
        }
    }
    stop() {
        if (this.handle) {
            clearInterval(this.handle);
            this.handle = undefined;
        }
    }
}
export class Timer extends EventEmitter {
    constructor(action, time) {
        super();
        this.handle = undefined;
        this.action = action;
        this.time = time;
        this.on("timeout", action);
    }
    start() {
        if (!this.handle) {
            this.handle = setTimeout(() => {
                this.emit("timeout");
                this.stop();
            }, this.time);
        }
    }
    stop() {
        if (this.handle) {
            clearTimeout(this.handle);
            this.handle = undefined;
        }
    }
}
export default { Timer, Schedule };
